<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Admin</web>
  <name>FarmImporter</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Admin.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1387461151000</creationDate>
  <date>1387461197000</date>
  <contentUpdateDate>1387461197000</contentUpdateDate>
  <version>1.1</version>
  <title>Farm Importer</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>Admin.FarmImporter</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>43ac48e1-a64e-4cbb-a862-58e30895df56</guid>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>(function(){
  document.observe('dom:loaded', function () {
    var inputElement = $('xar-input');
    if(inputElement !== undefined) {
      Event.observe(inputElement, "focus", function() {
        new XWiki.widgets.Suggest(this, {
          script: '$xwiki.getURL("Admin.FarmImporterAutoSuggest", 'get', 'outputSyntax=plain')', 
          varname: "input", 
          seps: " ,|",
          offsety: 13
        });
      });
    }
  });
})();</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <name>Admin.FarmImporter</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>4a543824-f337-473a-8bd8-60c885d133d9</guid>
    <property>
      <level>programming</level>
    </property>
  </object>
  <content>{{velocity}}
##
## Load the JS that handles the autosuggest of the attachments to this page
##
#set($discard = $xwiki.jsx.use($doc.fullName))
##
#set($xaction = "$!{request.getParameter('xaction')}")
#set($confirm = "$!{request.getParameter('confirm')}")
#set($hasError = false)
#if($xaction == '')
  
{{html}}
    This application allows to import a XAR package on multiple subwikis at once. 
    &lt;form id="importform" action="$doc.getURL('view', 'xaction=import')" method="post"&gt;
      &lt;input type="hidden" name="xaction" value="import"/&gt;
      &lt;dl&gt;
        &lt;dt&gt;Name of the XAR package, attached to this page, to import:&lt;/dt&gt;
        &lt;dd&gt;
          &lt;input id="xar-input" type="text" name="xar" size="60"/&gt;
        &lt;/dd&gt;
        &lt;dt&gt;Target wikis (main wiki not included):&lt;/dt&gt;
        &lt;dd&gt;
          &lt;span id="selectorspan" class="hidden"&gt;&lt;input id="selector" type="checkbox" checked="checked"/&gt;&lt;strong&gt;Select/Deselect all&lt;/strong&gt;&lt;/span&gt;
          #set($wikis = $xwiki.wikimanager.getAllWikis())        
          #foreach($wiki in $wikis)
            #if($wiki != $xwiki)
              &lt;span class="xwiki-form-listclass"&gt;
                &lt;input name="wikis" type="checkbox" value="$wiki" checked="checked" class='toggleable'/&gt;
                #set($descriptor = $xwiki.wikimanager.getWikiDocument($wiki.toString()))
                $wiki - &lt;a href="$xwiki.getURL("${wiki}:Main.WebHome")"&gt;$descriptor.getServer()&lt;/a&gt;
              &lt;/span&gt;              
            #end
          #end
        &lt;/dd&gt;
        &lt;dt&gt;The import will add new versions to the existing pages in all the selected wikis, do you wish to continue ? i.e. the import options are .setPreserveVersion(true) and .setWithVersions(false)&lt;/dt&gt;
        &lt;dd&gt;
          &lt;input name="confirm" type="checkbox" value="true"/&gt;
        &lt;/dd&gt;
        &lt;span class="buttonwrapper"&gt;
          &lt;input type="submit" value="Import"/&gt;
        &lt;/span&gt;
      &lt;/dl&gt;
    &lt;/form&gt;
{{/html}}
  
#elseif($xaction == 'import' &amp;&amp; $confirm == 'true')
  #set($xar = "$!request.getParameter('xar')")
  #set($wikis = $request.getParameterValues('wikis'))

  = Information =
  
  == XAR to import: $xar ==

  == Status ==

  {{html}}
    &lt;div id='wiki-status'&gt;&lt;/div&gt;
  {{/html}}

  = Import Log =
  
{{html}}
    &lt;div&gt;
      &lt;span class="buttonwrapper"&gt;&lt;a id="startimport" href="#"&gt;Start&lt;/a&gt;&lt;/span&gt;
      &lt;span class="buttonwrapper"&gt;&lt;a id="stopimport" href="#"&gt;Cancel&lt;/a&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;br/&gt;
    &lt;script type="text/javascript"&gt;
      Event.observe(document, 'xwiki:dom:loaded', function() {
        XWiki.farmimporter = {
          runnable: true,
          wikis: new Array(),
          importNextWiki: function() {          
            if(XWiki.farmimporter.wikis.size() &gt; 0 &amp;&amp; XWiki.farmimporter.runnable &amp;&amp; XWiki.farmimporter.xarPackageName !== undefined) {
              var wiki = XWiki.farmimporter.wikis.shift();
              new Ajax.Updater(
                wiki,
                window.docgeturl + '?outputSyntax=plain&amp;xaction=importinwiki&amp;wiki=' + wiki + '&amp;xarPackageName=' +XWiki.farmimporter.xarPackageName,
                {
                  method: 'post',
                  onSuccess: function(transport) {
                    XWiki.farmimporter.importNextWiki();
                  },
                  onLoading : function(transport) {
                    var currentWiki = new Element('p', {'id' : 'current-wiki'}).update('Importing in ' +wiki+ ' wiki');
                    $('wiki-status').insert({
                      bottom: currentWiki
                    });
                  },
                  onComplete : function(response){
                    var wikiContainer = document.getElementById('wiki-status');
                    $(wikiContainer.childNodes[wikiContainer.childNodes.length - 1]).update('Finished importing in ' +wiki+ ' wiki');
                  }
                }
              );
            }
          }
        };
        $('stopimport').observe('click', function(event) {
          XWiki.farmimporter.runnable = false;
          event.stop();
        });       
        $('startimport').observe('click', function(event) {
          XWiki.farmimporter.importNextWiki();
          event.stop();
        });       
      });
    &lt;/script&gt;
    &lt;div id="importlog"&gt;
      #foreach($wiki in $wikis)
        &lt;div id="$wiki" style="float:left;"&gt;&lt;/div&gt;
      #end
      &lt;script type="text/javascript"&gt;
        Event.observe(document, 'xwiki:dom:loaded', function() {
          ## We need a better way of pushing the servlet request array into the javascript array
          #foreach($wiki in $wikis)
            XWiki.farmimporter.wikis.push("${wiki}");
          #end
          XWiki.farmimporter.xarPackageName = "${xar}";
        });
      &lt;/script&gt;
    &lt;/div&gt;
{{/html}}

#elseif($xaction == 'import' &amp;&amp; $confirm != 'true')
  {{error}}You must check the confirm box to perform the import{{/error}}
  #set($hasError = true)
#elseif($xaction == 'importinwiki')
  #set($importtool = $xwiki.parseGroovyFromPage('Admin.FarmImporterGroovyClass'))
  #set($discard = $importtool.setContext($xcontext, $xwiki))
  ##
  #set($wiki = "$!{request.getParameter('wiki')}")
  #set($xar = "$!{request.getParameter('xarPackageName')}")
  ##
  #set($xar = $doc.getAttachment($xar))
  ##------------------------------------------------------
  #*  The method call 'importXarInWiki' should return 2 for INSTALL_OK and 4 for INSTALL_ERROR according to
   *  https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/plugin/packaging/DocumentInfo.java#L57
   * The actual method that gets called and returns the status of 2 or 4 is https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/plugin/packaging/Package.java#L619
  *#
  ##------------------------------------------------------
  #set($result = $importtool.importXarInWiki($xar, $wiki))
  ##------------------------------------------------------
  ##
  ##------------------------------------------------------
  #if($result == 2)
    #set($log = "&lt;span style='color:green;font-weight:bold;'&gt;[OK]&lt;/span&gt;")
  #else
    #set($log = "&lt;span style='color:red;font-weight:bold;'&gt;[ERROR]&lt;/span&gt;")
  #end
  $wiki: ${log}&amp;nbsp;-&amp;nbsp;
#else
  {{error}}Unknow action: $xaction{{/error}}
  #set($hasError = true)
#end
#if($hasError)

{{html}}
    &lt;span class="buttonwrapper"&gt;
      &lt;a href="$doc.getURL('view')"&gt;Reset the application&lt;/a&gt;
    &lt;/span&gt;
{{/html}}

#end
{{/velocity}}

{{html}}
&lt;script type="text/javascript"&gt;
Event.observe(document, 'xwiki:dom:loaded', function() {
  $('selectorspan').className = '';
  $('selector').observe('click', function(){
    $('importform').select('.toggleable').each(function(item) {
      if (item.checked){
        item.checked=false;
      } else {
        item.checked=true;
      }
    });
  });
});
&lt;/script&gt;
{{/html}}</content>
</xwikidoc>
